stages:
  - build1
  - deploy1
  - build2
  - deploy2

build-job1:
  image: node:12-alpine
  stage: build1
  tags:
    - angular
  allow_failure: false
  before_script:
    - apk add zip
  script:
    - npm link @angular/cli
    - cd timebank
    - npm install
    - ng build --configuration=testing
    - cd dist/timebank
    - zip -r test.zip *
    - mv test.zip ../../../test.zip
  artifacts:
    paths:
      - test.zip
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

deploy-job1:
  stage: deploy1
  tags:
    - angular
  needs: ['build-job1']
  allow_failure: false
  before_script:
  - apk add unzip
  - apk add openssh-client
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no automation@157.245.27.101 " rm -r /var/www/html/* || FAILED=true"
    - scp -o StrictHostKeyChecking=no test.zip automation@157.245.27.101:/var/www/html
    - ssh -o StrictHostKeyChecking=no automation@157.245.27.101 "cd /var/www/html; unzip -o test.zip"
    - ssh -o StrictHostKeyChecking=no automation@157.245.27.101 "cd /var/www/html; rm test.zip"
    - echo "Build for test finished"

build-job2:
  image: node:12-alpine
  stage: build2
  tags:
    - angular
  when: manual
  needs: ['deploy-job1']
  allow_failure: false
  before_script:
    - apk add zip
  script:
    - npm link @angular/cli
    - cd timebank
    - npm install
    - ng build --configuration=production
    - cd dist/timebank
    - zip -r prod.zip *
    - mv prod.zip ../../../prod.zip
  artifacts:
    paths:
      - prod.zip
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull
  only:
    - main

deploy-job2:
  stage: deploy2
  tags:
    - angular
  needs: ['build-job2']
  allow_failure: false
  before_script:
  - apk add unzip
  - apk add openssh-client
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no automation@157.230.79.85 " rm -r /var/www/html/* || FAILED=true"
    - scp -o StrictHostKeyChecking=no prod.zip automation@157.230.79.85:/var/www/html
    - ssh -o StrictHostKeyChecking=no automation@157.230.79.85 "cd /var/www/html; unzip -o prod.zip"
    - ssh -o StrictHostKeyChecking=no automation@157.230.79.85 "cd /var/www/html; rm prod.zip"
    - echo "Build for prod finished"
