stages:
  - build
  - deploy

build-job:
  image: node:12-alpine
  stage: build
  tags:
    - angular
  before_script:
    - apk add zip
  script:
    - npm link @angular/cli
    - cd timebank
    - npm install
    - npm run build
    - cd dist/timebank
    - zip -r public.zip *
    - mv public.zip ../../../public.zip
  artifacts:
    paths:
      - public.zip
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

deploy-to-test-job:
  stage: deploy
  tags:
    - angular
  needs: ['build-job']
  before_script:
  - apk add unzip
  - apk add openssh-client
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no automation@157.245.27.101 "cd /var/www; rm -r html/*"
#    - ssh -o StrictHostKeyChecking=no automation@157.245.27.101 "cd /var/www/; mkdir html"
    - scp -o StrictHostKeyChecking=no public.zip automation@157.245.27.101:/var/www/html
    - ssh -o StrictHostKeyChecking=no automation@157.245.27.101 "cd /var/www/html; unzip public.zip"
    - ssh -o StrictHostKeyChecking=no automation@157.245.27.101 "cd /var/www/html; rm public.zip"
    - echo "Build for testing finished"
